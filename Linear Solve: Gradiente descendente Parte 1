"""
De: Marco Ramirez  
Jose Pablo Muñoz 
"""

import numpy as np

def gradient(x, A, b):
	element_1 = np.dot(np.transpose(A),np.dot(A, x))
	element_2 = np.dot(np.transpose(A), b)
	return element_1 - element_2


A_coef = np.array([[2.0, 1.0, -3.0], [5.0, -4.0, 1.0], [1.0, -1.0, -4.0]])
b_coef = np.array([7.0, -19.0, 4.0])

x_sol = np.array([1.0, 1.0, 1.0])


def linear_solve(A, b, x_sol, umbral, max_iter ):
    k = 0.002 #Parámetros de ajuste o hiperparámetros
    for i in range(max_iter):
        print(x_sol)
        x_sol = x_sol  - k * gradient(x_sol, A, b)
        mult= np.dot(A,x_sol)
        error = np.sum(np.abs(mult-b))
        if error < umbral:
            return x_sol
    

print(np.dot(A_coef,linear_solve(A_coef, b_coef, x_sol, 0.001,  10000)))
